/**
 * Enhanced Currency Conversion Calculator
 * The Enhanced Currency Conversion Calculator is a subscription-based service that provides access to Mastercard's current dates currency conversion rates as well as historical currency conversion rates. Additionally, the API provides access to European Central Bank (ECB) reference rates that European Economic Area (EEA) issuing customer may require for the purposes of compliance with EU Regulation 2019/518
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EnhancedCurrencyConversionResponse from '../model/EnhancedCurrencyConversionResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* ConversionRateSummary service.
* @module api/ConversionRateSummaryApi
* @version 1.0.0
*/
export default class ConversionRateSummaryApi {

    /**
    * Constructs a new ConversionRateSummaryApi. 
    * @alias module:api/ConversionRateSummaryApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getEnhancedConversionDetailsUsingGET operation.
     * @callback module:api/ConversionRateSummaryApi~getEnhancedConversionDetailsUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EnhancedCurrencyConversionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getEnhancedConversionDetails
     * @param {String} rateDate Date of the requested FX rates
     * @param {String} transCurr Currency of the transaction
     * @param {String} transAmt Amount in the transaction currency
     * @param {String} crdhldBillCurr Cardholder billing currency
     * @param {Object} opts Optional parameters
     * @param {String} opts.bankFeePct Percentage mark-up/fee (if applicable) an issuer would assess a cardholder on the cross-border/cross-currency transaction
     * @param {String} opts.bankFeeFixed Fixed mark-up/fee (if applicable) an issuer would assess a cardholder on the cross-border/cross-currency transaction (amount in cardholder billing currency)
     * @param {module:api/ConversionRateSummaryApi~getEnhancedConversionDetailsUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EnhancedCurrencyConversionResponse}
     */
    getEnhancedConversionDetailsUsingGET(rateDate, transCurr, transAmt, crdhldBillCurr, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'rateDate' is set
      if (rateDate === undefined || rateDate === null) {
        throw new Error("Missing the required parameter 'rateDate' when calling getEnhancedConversionDetailsUsingGET");
      }
      // verify the required parameter 'transCurr' is set
      if (transCurr === undefined || transCurr === null) {
        throw new Error("Missing the required parameter 'transCurr' when calling getEnhancedConversionDetailsUsingGET");
      }
      // verify the required parameter 'transAmt' is set
      if (transAmt === undefined || transAmt === null) {
        throw new Error("Missing the required parameter 'transAmt' when calling getEnhancedConversionDetailsUsingGET");
      }
      // verify the required parameter 'crdhldBillCurr' is set
      if (crdhldBillCurr === undefined || crdhldBillCurr === null) {
        throw new Error("Missing the required parameter 'crdhldBillCurr' when calling getEnhancedConversionDetailsUsingGET");
      }

      let pathParams = {
      };
      let queryParams = {
        'rate_date': rateDate,
        'trans_curr': transCurr,
        'trans_amt': transAmt,
        'crdhld_bill_curr': crdhldBillCurr,
        'bank_fee_pct': opts['bankFeePct'],
        'bank_fee_fixed': opts['bankFeeFixed']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EnhancedCurrencyConversionResponse;
      return this.apiClient.callApi(
        '/summary-rates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
