/**
 * Enhanced Currency Conversion Calculator
 * The Enhanced Currency Conversion Calculator is a subscription-based service that provides access to Mastercard's current dates currency conversion rates as well as historical currency conversion rates. Additionally, the API provides access to European Central Bank (ECB) reference rates that European Economic Area (EEA) issuing customer may require for the purposes of compliance with EU Regulation 2019/518
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
	if (typeof define === "function" && define.amd) {
		// AMD. Register as an anonymous module.
		define(["ApiClient", "model/EcbError"], factory);
	} else if (typeof module === "object" && module.exports) {
		// CommonJS-like environments that support module.exports, like Node.
		module.exports = factory(
			require("../ApiClient"),
			require("./EcbError")
		);
	} else {
		// Browser globals (root is window)
		if (!root.EnhancedCurrencyConversionCalculator) {
			root.EnhancedCurrencyConversionCalculator = {};
		}
		root.EnhancedCurrencyConversionCalculator.Errors = factory(
			root.EnhancedCurrencyConversionCalculator.ApiClient,
			root.EnhancedCurrencyConversionCalculator.EcbError
		);
	}
})(this, function (ApiClient, EcbError) {
	"use strict";

	/**
	 * The Errors model module.
	 * @module model/Errors
	 * @version 1.0.0
	 */

	/**
	 * Constructs a new <code>Errors</code>.
	 * @alias module:model/Errors
	 * @class
	 * @param error {Array.<module:model/EcbError>}
	 */
	var exports = function (error) {
		var _this = this;

		_this["Error"] = error;
	};

	/**
	 * Constructs a <code>Errors</code> from a plain JavaScript object, optionally creating a new instance.
	 * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
	 * @param {Object} data The plain JavaScript object bearing properties of interest.
	 * @param {module:model/Errors} obj Optional instance to populate.
	 * @return {module:model/Errors} The populated <code>Errors</code> instance.
	 */
	exports.constructFromObject = function (data, obj) {
		if (data) {
			obj = obj || new exports();
			if (data.hasOwnProperty("Error")) {
				obj["Error"] = ApiClient.convertToType(data["Error"], [
					EcbError,
				]);
			}
		}
		return obj;
	};

	/**
	 * @member {Array.<module:model/EcbError>} Error
	 */
	exports.prototype["Error"] = undefined;

	return exports;
});
