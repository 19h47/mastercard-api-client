/**
 * Enhanced Currency Conversion Calculator
 * The Enhanced Currency Conversion Calculator is a subscription-based service that provides access to Mastercard's current dates currency conversion rates as well as historical currency conversion rates. Additionally, the API provides access to European Central Bank (ECB) reference rates that European Economic Area (EEA) issuing customer may require for the purposes of compliance with EU Regulation 2019/518
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
	if (typeof define === "function" && define.amd) {
		// AMD. Register as an anonymous module.
		define([
			"ApiClient",
			"model/ECBConversionObject",
			"model/MastercardConversionObject",
		], factory);
	} else if (typeof module === "object" && module.exports) {
		// CommonJS-like environments that support module.exports, like Node.
		module.exports = factory(
			require("../ApiClient"),
			require("./ECBConversionObject"),
			require("./MastercardConversionObject")
		);
	} else {
		// Browser globals (root is window)
		if (!root.EnhancedCurrencyConversionCalculator) {
			root.EnhancedCurrencyConversionCalculator = {};
		}
		root.EnhancedCurrencyConversionCalculator.EnhancedCurrencyConversionData = factory(
			root.EnhancedCurrencyConversionCalculator.ApiClient,
			root.EnhancedCurrencyConversionCalculator.ECBConversionObject,
			root.EnhancedCurrencyConversionCalculator.MastercardConversionObject
		);
	}
})(this, function (ApiClient, ECBConversionObject, MastercardConversionObject) {
	"use strict";

	/**
	 * The EnhancedCurrencyConversionData model module.
	 * @module model/EnhancedCurrencyConversionData
	 * @version 1.0.0
	 */

	/**
	 * Constructs a new <code>EnhancedCurrencyConversionData</code>.
	 * @alias module:model/EnhancedCurrencyConversionData
	 * @class
	 */
	var exports = function () {
		var _this = this;
	};

	/**
	 * Constructs a <code>EnhancedCurrencyConversionData</code> from a plain JavaScript object, optionally creating a new instance.
	 * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
	 * @param {Object} data The plain JavaScript object bearing properties of interest.
	 * @param {module:model/EnhancedCurrencyConversionData} obj Optional instance to populate.
	 * @return {module:model/EnhancedCurrencyConversionData} The populated <code>EnhancedCurrencyConversionData</code> instance.
	 */
	exports.constructFromObject = function (data, obj) {
		if (data) {
			obj = obj || new exports();
			if (data.hasOwnProperty("transCurr")) {
				obj["transCurr"] = ApiClient.convertToType(
					data["transCurr"],
					"String"
				);
			}
			if (data.hasOwnProperty("crdhldBillCurr")) {
				obj["crdhldBillCurr"] = ApiClient.convertToType(
					data["crdhldBillCurr"],
					"String"
				);
			}
			if (data.hasOwnProperty("rateDate")) {
				obj["rateDate"] = ApiClient.convertToType(
					data["rateDate"],
					"String"
				);
			}
			if (data.hasOwnProperty("transAmt")) {
				obj["transAmt"] = ApiClient.convertToType(
					data["transAmt"],
					"Number"
				);
			}
			if (data.hasOwnProperty("bankFeePct")) {
				obj["bankFeePct"] = ApiClient.convertToType(
					data["bankFeePct"],
					"Number"
				);
			}
			if (data.hasOwnProperty("bankFeeFixed")) {
				obj["bankFeeFixed"] = ApiClient.convertToType(
					data["bankFeeFixed"],
					"Number"
				);
			}
			if (data.hasOwnProperty("mastercard")) {
				obj[
					"mastercard"
				] = MastercardConversionObject.constructFromObject(
					data["mastercard"]
				);
			}
			if (data.hasOwnProperty("ecb")) {
				obj["ecb"] = ECBConversionObject.constructFromObject(
					data["ecb"]
				);
			}
			if (data.hasOwnProperty("effectiveConversionRate")) {
				obj["effectiveConversionRate"] = ApiClient.convertToType(
					data["effectiveConversionRate"],
					"Number"
				);
			}
			if (
				data.hasOwnProperty("pctDifferenceMastercardExclAllFeesAndEcb")
			) {
				obj[
					"pctDifferenceMastercardExclAllFeesAndEcb"
				] = ApiClient.convertToType(
					data["pctDifferenceMastercardExclAllFeesAndEcb"],
					"Number"
				);
			}
			if (
				data.hasOwnProperty("pctDifferenceMastercardInclAllFeesAndEcb")
			) {
				obj[
					"pctDifferenceMastercardInclAllFeesAndEcb"
				] = ApiClient.convertToType(
					data["pctDifferenceMastercardInclAllFeesAndEcb"],
					"Number"
				);
			}
		}
		return obj;
	};

	/**
	 * Currency of the transaction as provided in the API request
	 * @member {String} transCurr
	 */
	exports.prototype["transCurr"] = undefined;
	/**
	 * Cardholder billing currency as provided in the API request
	 * @member {String} crdhldBillCurr
	 */
	exports.prototype["crdhldBillCurr"] = undefined;
	/**
	 * The date of the requested rates
	 * @member {String} rateDate
	 */
	exports.prototype["rateDate"] = undefined;
	/**
	 * Amount in transaction currency as provided in the API request
	 * @member {Number} transAmt
	 */
	exports.prototype["transAmt"] = undefined;
	/**
	 * Percentage bank fee as provided in the API request
	 * @member {Number} bankFeePct
	 */
	exports.prototype["bankFeePct"] = undefined;
	/**
	 * Fixed bank fee as provided in the API request
	 * @member {Number} bankFeeFixed
	 */
	exports.prototype["bankFeeFixed"] = undefined;
	/**
	 * @member {module:model/MastercardConversionObject} mastercard
	 */
	exports.prototype["mastercard"] = undefined;
	/**
	 * @member {module:model/ECBConversionObject} ecb
	 */
	exports.prototype["ecb"] = undefined;
	/**
	 * Calculated effective exchange rate for the requested currency pair including all issuer-to-cardholder fees. This is calculated by dividing cardholder billing amount including all fees divided by the transaction amount (crdhldBillAmtInclAllFees / transAmount)
	 * @member {Number} effectiveConversionRate
	 */
	exports.prototype["effectiveConversionRate"] = undefined;
	/**
	 * Calculated percentage difference between Mastercard Conversion Rate excluding all issuer-to-cardholder fees for the selected currency pair and the ECB Reference Rate
	 * @member {Number} pctDifferenceMastercardExclAllFeesAndEcb
	 */
	exports.prototype["pctDifferenceMastercardExclAllFeesAndEcb"] = undefined;
	/**
	 * Calculated percentage difference between Mastercard Conversion Rate Including all issuer-to-cardholder fees (fixed and percentage) for the selected currency pair and the ECB Reference Rate ([effectiveConversionRate/ecbReferenceRateDate]-1*100)
	 * @member {Number} pctDifferenceMastercardInclAllFeesAndEcb
	 */
	exports.prototype["pctDifferenceMastercardInclAllFeesAndEcb"] = undefined;

	return exports;
});
